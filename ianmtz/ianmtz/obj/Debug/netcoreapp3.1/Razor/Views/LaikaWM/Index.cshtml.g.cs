#pragma checksum "/Users/ianmartinez/GitHub/ianmtz/ianmtz/ianmtz/Views/LaikaWM/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5fc288771699f2d24a2d40981c1dc077086c7f34"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_LaikaWM_Index), @"mvc.1.0.view", @"/Views/LaikaWM/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/ianmartinez/GitHub/ianmtz/ianmtz/ianmtz/Views/_ViewImports.cshtml"
using ianmtz;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/ianmartinez/GitHub/ianmtz/ianmtz/ianmtz/Views/_ViewImports.cshtml"
using ianmtz.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5fc288771699f2d24a2d40981c1dc077086c7f34", @"/Views/LaikaWM/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fcc87c3596b3b9c53a8561dbec0f73d42bfe13b6", @"/Views/_ViewImports.cshtml")]
    public class Views_LaikaWM_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/LaikaWM/Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/ianmartinez/GitHub/ianmtz/ianmtz/ianmtz/Views/LaikaWM/Index.cshtml"
  
    Layout = "_AppLayout";
    ViewData["Title"] = "LaikaWM";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            DefineSection("icon", async() => {
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5fc288771699f2d24a2d40981c1dc077086c7f343677", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n");
            }
            );
            WriteLiteral("\n");
            DefineSection("description", async() => {
                WriteLiteral(@"
    <div class=""appWarning"">
        <ion-icon name=""alert-circle""></ion-icon>
        <span>This is <em>very</em> early in the planning stage and is still incomplete.</span>
    </div>

    <p class=""appDescriptionText"">
        A modern, lightweight Wayland compositor, inspired by earlier X11 window managers,
        such as <a href=""https://en.wikipedia.org/wiki/IceWM"">IceWM</a> and 
        <a href=""https://en.wikipedia.org/wiki/Fluxbox"">Fluxbox</a>.
    </p>

    <div class=""appDescriptionExtended"">
        <p><strong>Written In:</strong> C/C++</p>
    </div>

    <div class=""appButtons"">
        <a class=""btn btn-primary imageButton"" href=""https://github.com/ianmartinez/laikawm"" role=""button"">
            <ion-icon name=""logo-github""></ion-icon><span>GitHub</span>
        </a>
    </div>
");
            }
            );
            WriteLiteral(@"
<div class=""container appFeatures"">
    <div class=""row featurette"">
        <div class=""col-md-12"">
            <h2 class=""featurette-heading"">Lightweight</h2>

            <div class=""featuretteDescription"">
                <p class=""lead"">
                   LaikaWM has a small footprint and is able to run on devices with limited resources, like 
                   the Raspberry Pi, all the way up to full-fledged desktops.
                </p>
            </div>
        </div>
    </div>

    <hr class=""featurette-divider"">

    <div class=""row featurette orderFlip"">
        <div class=""col-md-12"">
            <h2 class=""featurette-heading"">Themeable</h2>

            <div class=""featuretteDescription"">
                <p class=""lead"">
                    It is highly customizable with different themes, which are sets of 
                    configuration files and SVG images that represent elements in the UI. 
                </p>

                <p class=""extendedDescription"">
                    A sin");
            WriteLiteral(@"gle theme can have multiple variants deriving from the <strong>default</strong> 
                    variant, such as a light and a dark variant of the same theme.
                </p>
            </div>
        </div>
    </div>

    <hr class=""featurette-divider"">

    <div class=""row featurette"">
        <div class=""col-md-12"">
            <h2 class=""featurette-heading"">Scalable</h2>

            <div class=""featuretteDescription"">
                <p class=""lead"">
                    All UI elements are vectors, so they appear sharp on any display.
                </p>

                <p class=""extendedDescription"">
                    Theme elements are stored as SVGs that are rasterized to
                    PNG images that match the current screen's scaling.
                </p>
            </div>
        </div>
    </div>


    <hr class=""featurette-divider"">

    <div class=""row featurette orderFlip"">
        <div class=""col-md-12"">
            <h2 class=""featurette-heading"">Easy to use</h2>

      ");
            WriteLiteral(@"      <div class=""featuretteDescription"">
                <p class=""lead"">
                    Though it can be configured entirely through text files,
                    LaikaWM also provides a built-in <strong>LaikaConfig</strong> 
                    program that allows you to change settings using only a GUI. 
                </p>
            </div>
        </div>
    </div>

    <hr class=""featurette-divider"">

    <div class=""row featurette"">
        <div class=""col-md-12"">
            <h2 class=""featurette-heading"">Extendable</h2>

            <div class=""featuretteDescription"">
                <p class=""lead"">
                    LaikaWM has built-in support for <strong>Meters</strong>, which are plugins that display dynamic 
                    content. 
                </p>
            </div>
        </div>
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
